<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baqn.mybatis.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.baqn.mybatis.entity.Student">
    <id column="studentNo" jdbcType="INTEGER" property="studentno" />
    <result column="loginPwd" jdbcType="VARCHAR" property="loginpwd" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="gradeId" jdbcType="INTEGER" property="gradeid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="bornDate" jdbcType="DATE" property="borndate" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="identityCard" jdbcType="VARCHAR" property="identitycard" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    studentNo, loginPwd, studentName, sex, gradeId, phone, address, bornDate, email, 
    identityCard
  </sql>
  <select id="selectByExample" parameterType="com.baqn.mybatis.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where studentNo = #{studentno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where studentNo = #{studentno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.baqn.mybatis.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.baqn.mybatis.entity.Student">
    insert into student (studentNo, loginPwd, studentName, 
      sex, gradeId, phone, address, 
      bornDate, email, identityCard
      )
    values (#{studentno,jdbcType=INTEGER}, #{loginpwd,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{gradeid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{borndate,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, #{identitycard,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.baqn.mybatis.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentno != null">
        studentNo,
      </if>
      <if test="loginpwd != null">
        loginPwd,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="gradeid != null">
        gradeId,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="borndate != null">
        bornDate,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="identitycard != null">
        identityCard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentno != null">
        #{studentno,jdbcType=INTEGER},
      </if>
      <if test="loginpwd != null">
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="borndate != null">
        #{borndate,jdbcType=DATE},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null">
        #{identitycard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baqn.mybatis.entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.studentno != null">
        studentNo = #{record.studentno,jdbcType=INTEGER},
      </if>
      <if test="record.loginpwd != null">
        loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.studentname != null">
        studentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.gradeid != null">
        gradeId = #{record.gradeid,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.borndate != null">
        bornDate = #{record.borndate,jdbcType=DATE},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.identitycard != null">
        identityCard = #{record.identitycard,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set studentNo = #{record.studentno,jdbcType=INTEGER},
      loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      gradeId = #{record.gradeid,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      bornDate = #{record.borndate,jdbcType=DATE},
      email = #{record.email,jdbcType=VARCHAR},
      identityCard = #{record.identitycard,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baqn.mybatis.entity.Student">
    update student
    <set>
      <if test="loginpwd != null">
        loginPwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="gradeid != null">
        gradeId = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="borndate != null">
        bornDate = #{borndate,jdbcType=DATE},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null">
        identityCard = #{identitycard,jdbcType=VARCHAR},
      </if>
    </set>
    where studentNo = #{studentno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baqn.mybatis.entity.Student">
    update student
    set loginPwd = #{loginpwd,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      gradeId = #{gradeid,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      bornDate = #{borndate,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      identityCard = #{identitycard,jdbcType=VARCHAR}
    where studentNo = #{studentno,jdbcType=INTEGER}
  </update>
</mapper>